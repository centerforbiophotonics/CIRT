class PersonFundsController < ApplicationController
  before_action :set_person_fund, only: [:update, :destroy]
  before_action :check_authorization

  # GET /person_funds
  def index
    @person_funds = PersonFund.all.map{|m| [m.id, m.with_associations] }.to_h
    respond_to do |format|
      format.html { render :action => "index" }
      format.json { render :json => @person_fundsx}
    end
  end

  # POST /person_funds
  def create
    @person_fund = PersonFund.new(person_fund_params)

    if @person_fund.save
      render :json => @person_fund.with_associations
    else
      render json: @person_fund.errors, status: :unprocessable_entity
    end
  end

  # PATCH/PUT /person_funds/1
  def update
    if @person_fund.update(person_fund_params)
      render json: @person_fund.with_associations
    else
      render json: @person_fund.errors, status: :unprocessable_entity
    end
  end

  # DELETE /person_funds/1
  def destroy
    render json: @person_fund.destroy
  end

  # GET /person_funds/search
  # This action is included as a placeholder for actual search logic.
  # The react component generated by default will send a search string in params[:search_text]
  def search
    render json: PersonFund.first(10)
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_person_fund
      @person_fund = PersonFund.find(params[:id])
    end

    # Only allow a trusted parameter "white list" through.
    def person_fund_params
      params.require(:person_fund).permit(:person_id, :fund_id)
    end

    def check_authorization
      authorize PersonFund
    end
end
