class ScantronAppointmentsController < ApplicationController
  before_action :set_scantron_appointment, only: [:update, :destroy]
  before_action :check_authorization

  # GET /scantron_appointments
  def index
    @scantron_appointments = ScantronAppointment.all.map{|m| [m.id, m] }.to_h
    respond_to do |format|
      format.html { render :action => "index" }
      format.json { render :json => @scantron_appointmentsx}
    end
  end

  # POST /scantron_appointments
  def create
    @scantron_appointment = ScantronAppointment.new(scantron_appointment_params)

    if @scantron_appointment.save
      render :json => @scantron_appointment
    else
      render json: @scantron_appointment.errors, status: :unprocessable_entity
    end
  end

  # PATCH/PUT /scantron_appointments/1
  def update
    if @scantron_appointment.update(scantron_appointment_params)
      render json: @scantron_appointment
    else
      render json: @scantron_appointment.errors, status: :unprocessable_entity
    end
  end

  # DELETE /scantron_appointments/1
  def destroy
    render json: @scantron_appointment.destroy
  end

  # GET /scantron_appointments/search
  # This action is included as a placeholder for actual search logic.
  # The react component generated by default will send a search string in params[:search_text]
  def search
    render json: ScantronAppointment.first(10)
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_scantron_appointment
      @scantron_appointment = ScantronAppointment.find(params[:id])
    end

    # Only allow a trusted parameter "white list" through.
    def scantron_appointment_params
      params.require(:scantron_appointment).permit(:date, :course, :term_code, :number_of_scantrons)
    end

    def check_authorization
      authorize ScantronAppointment
    end
end
